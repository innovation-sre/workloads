---
#
# Generate workload report
#

- name: Generate workload report
  hosts: orchestration
  gather_facts: true
  remote_user: "{{orchestration_user}}"
  vars_files:
    - "vars/{{ playbook_vars_file }}"
  tasks:
    # Read promql vars from template use job_name and build_number
    - name: Lookup list of prom queries
      shell: "cat {{ansible_user_dir}}/scale-ci-tooling/prometheus.yml"
      register: promql_queries_output
    
    # Set promql vars from template
    - name: Set fact
      set_fact:
        promql_queries: "{{ promql_queries_output.stdout | from_yaml }}"
    
    # Get end time
    - name: Get end time
      shell: |
          date +%s
      register: endtime_set

    # Set end time
    - name: Set End time
      set_fact:
        end_time: "{{endtime_set.stdout}}"
    
    # Prometheus server
    - name: Get Promethues endpoint/url
      shell: |
        oc get route prometheus-k8s -n openshift-monitoring -o jsonpath="{.spec.host}"
      register: prom_url_cmd
    
    - name: Set Prometheus endpoint/url
      set_fact:
        prom_url: "{{prom_url_cmd.stdout}}"
    
    # Prometheus user
    - name: Set Prometheus user
      set_fact:
        prom_user: "internal"

    # Get prometheus server password
    - name: Get Prometheus password
      shell: |
        {%raw%}oc get secrets -n openshift-monitoring grafana-datasources -o go-template='{{index .data "prometheus.yaml"}}' | base64 --decode | jq '.datasources[0].basicAuthPassword'{%endraw%}
      register: prom_pass_cmd
    
    # Set prom pass
    - name: Set Prometheus pass
      set_fact:
        prom_pass: "{{prom_pass_cmd.stdout.replace('\"', '')}}"
      no_log: true

    # path to store reports 
    - name: Set workload report file storage path
      set_fact:
        file_path: "{{workspace}}/reports"

    # Call the python program and generate csv or plot file
    - name: Get/run reports
      command: |
        python3 "{{playbook_dir}}"/files/workload-report.py \
        --start="{{ promql_queries.starttime }}" \ 
        --end="{{ end_time }}" \
        --step="{{item.step}}" \
        --url="https://{{prom_url}}" \
        --user="{{ prom_user }}" \
        --pass="{{ prom_pass }}" \
        --promql="{{item.expr}}" \
        --file_path="{{file_path}}" \
        --file_name="{{job_name + '-' + build_number + '-' + item.name + '.csv'}}" \
        --title="{{item.title}}" \
        --description="{{item.description}}" \
        --x_axis="{{item.x_label}}" \
        --y_axis="{{item.y_label}}"
      with_items: 
        - "{{ promql_queries.query }}" 
      delegate_to: 127.0.0.1