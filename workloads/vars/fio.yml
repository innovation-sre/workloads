---
###############################################################################
# Ansible SSH variables.
###############################################################################
ansible_public_key_file: "{{ lookup('env', 'PUBLIC_KEY')|default('~/.ssh/id_rsa.pub', true) }}"
ansible_private_key_file: "{{ lookup('env', 'PRIVATE_KEY')|default('~/.ssh/id_rsa', true) }}"

orchestration_user: "{{ lookup('env', 'ORCHESTRATION_USER')|default('root', true) }}"
###############################################################################
# RHCOS fiotest workload variables.
###############################################################################
# snafu es variables
snafu_es_host: "{{ lookup('env', 'ES_HOST')|default('', true) }}"
snafu_es_port: "{{ lookup('env', 'ES_PORT')|default('', true) }}"
snafu_es_index_prefix: "{{ lookup('env', 'ES_INDEX_PREFIX')|default('snafu', true) }}"
snafu_cluster_name: "{{ lookup('env', 'SNAFU_CLUSTER_NAME')|default('', true) }}"
snafu_user: "{{ lookup('env', 'SNAFU_USER')|default('scale-ci', true) }}"

workload_image: "{{ lookup('env', 'WORKLOAD_IMAGE')|default('quay.io/openshift-scale/scale-ci-workload:master', true) }}"
workload_job_node_selector: "{{ lookup('env', 'WORKLOAD_JOB_NODE_SELECTOR')|default('', true)|bool }}"
workload_job_taint: "{{ lookup('env', 'WORKLOAD_JOB_TAINT')|default(true, true)|bool }}"
workload_job_privileged: "{{ lookup('env', 'WORKLOAD_JOB_PRIVILEGED')|default(false, false)|bool }}"
kubeconfig_file: "{{ lookup('env', 'KUBECONFIG_FILE')|default('~/.kube/config', true) }}"

# pbench variables
pbench_ssh_private_key_file: "{{ lookup('env', 'PBENCH_SSH_PRIVATE_KEY_FILE')|default('~/.ssh/id_rsa', true) }}"
pbench_ssh_public_key_file: "{{ lookup('env', 'PBENCH_SSH_PUBLIC_KEY_FILE')|default('~/.ssh/id_rsa.pub', true) }}"
enable_pbench_agents: "{{ lookup('env', 'ENABLE_PBENCH_AGENTS')|default(false, true)|bool }}"
pbench_server: "{{ lookup('env', 'PBENCH_SERVER')|default('', true) }}"
enable_pbench_copy: "{{ lookup('env', 'ENABLE_PBENCH_COPY')|default(true, true)|bool|lower }}"

# Other variables for workload tests
scale_ci_results_token: "{{ lookup('env', 'SCALE_CI_RESULTS_TOKEN')|default('', true) }}"
job_completion_poll_attempts: "{{ lookup('env', 'JOB_COMPLETION_POLL_ATTEMPTS')|default(10000, true)|int }}"

# FIO IO test workload specific parameters:
fiotest_prefix: "{{ lookup('env', 'FIOTEST_PREFIX')|default('fiotest', true) }}"
fiotest_cleanup: "{{ lookup('env', 'FIOTEST_CLEANUP')|default(true, true)|bool|lower }}"
fiotest_basename: "{{ lookup('env', 'FIOTEST_BASENAME')|default('fiotest', true) }}"
fiotest_maxpods: "{{ lookup('env', 'FIOTEST_MAXPODS')|default(1, true)|int }}"
fiotest_parallelism: "{{ lookup('env', 'FIOTEST_PARALLELISM')|default(1, true)|int }}"
fiotest_pod_image: "{{ lookup('env', 'FIOTEST_POD_IMAGE')|default('quay.io/openshift-scale/scale-ci-fio', true) }}"
fiotest_stepsize: "{{ lookup('env', 'FIOTEST_STEPSIZE')|default(1, true)|int }}"
fiotest_pause: "{{ lookup('env', 'FIOTEST_PAUSE')|default(0, true)|int }}"
fiotest_storage_size: "{{ lookup('env', 'FIOTEST_STORAGE_SIZE')|default('2Gi',true) }}"
fiotest_storageclass: "{{ lookup('env', 'FIOTEST_STORAGECLASS')|default('', true) }}"
fiotest_access_modes: "{{ lookup('env', 'FIOTEST_ACCESS_MODES')|default('ReadWriteOnce', true) }}"
fiotest_bs: "{{ lookup('env', 'FIOTEST_BS')|default('4k', true) }}"
fiotest_filename: "{{ lookup('env', 'FIOTEST_FILENAME')|default('/mnt/pvcmount/f2', true) }}"
fiotest_engine: "{{ lookup('env', 'FIOTEST_ENGINE')|default('libaio', true) }}"
fiotest_end_fsync: "{{ lookup('env', 'FIOTEST_END_FSYNC')|default(0, true)|int }}"
fiotest_filesize: "{{ lookup('env', 'FIOTEST_FILESIZE')|default('1GB', true) }}"
fiotest_runtime: "{{ lookup('env', 'FIOTEST_RUNTIME')|default(0, true)|int }}"
fiotest_max_nodes: "{{ lookup('env', 'FIOTEST_MAX_NODES')|default(3, true)|int }}"
fiotest_completions_per_job: "{{ lookup('env', 'FIOTEST_COMPLETIONS_PER_JOB')|default(1, true)|int }}"
fiotest_direct: "{{ lookup('env', 'FIOTEST_DIRECT')|default(1, true)|int }}"
fiotest_minimal: "{{ lookup('env', 'FIOTEST_MINIMAL')|default(1, true)|int }}"
fiotest_iodepth: "{{ lookup('env', 'FIOTEST_IODEPTH')|default(128, true)|int }}"
fiotest_testtype: "{{ lookup('env', 'FIOTEST_TESTTYPE')|default('write', true) }}"
fiotest_samples: "{{ lookup('env', 'FIOTEST_SAMPLES')|default(20, true)|int }}"
fiotest_description: "{{lookup('env', 'FIOTEST_DESCRIPTION')|default('', true) }}"
fiotest_ssh_port: "{{ lookup('env', 'FIOTEST_SSH_PORT')|default(2022, true)|int }}"
fiotest_ssh_authorized_keys: "{{pbench_ssh_public_key_file_slurp['content']}}"
fiotest_ssh_private_key: "{{pbench_ssh_private_key_file_slurp['content']}}"
fiotest_ssh_public_key: "{{pbench_ssh_public_key_file_slurp['content']}}"
ocp_cluster_environment: "{{ lookup('env', 'OCP_CLUSTER_ENV')|default('', true) }}"
ibm_cloud_storage_billing: "{{ lookup('env', 'IBM_CLOUD_STORAGE_BILLING')|default('hourly', true) }}"
ibm_cloud_storage_region: "{{ lookup('env', 'IBM_CLOUD_STORAGE_REGION')|default('us-south', true) }}"
ibm_cloud_storage_zone: "{{ lookup('env', 'IBM_CLOUD_STORAGE_ZONE')|default('dal13', true) }}"
azure_auth: "{{ lookup('env', 'AZURE_AUTH')|default(false, true)|bool|lower }}"
azure_auth_file: "{{ lookup('env', 'AZURE_AUTH_FILE')|default('', true) }}"
workload_nodeselector: "{{ lookup('env', 'WORKLOAD_NODESELECTOR')|default('', true) }}"
workload_script_config: "scale-ci-fio-script"
workload_anti_affinity: "{{ lookup('env', 'WORKLOAD_ANTI_AFFINITY')|default(true, true)|bool|lower }}"
workload_job_retries: 1

### TODO: Add for FIO
fiotest_rwmixread: "{{ lookup('env', 'FIOTEST_RWMIXREAD')|default(80, true)|int }}"

####
#Prometheus vars
workload_name: "fio"
job_name: "{{ lookup('env', 'JOB_NAME')|lower()|default('', true) }}"
job_url: "{{ lookup('env', 'JOB_URL')|default('', true) }}"
build_number: "{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}"
workspace: "{{ lookup('env', 'WORKSPACE')|default('', true) }}"
post_workload_sleep_time: "{{ lookup('env', 'POST_WORKLOAD_SLEEP_TIME')|default(180, true) | int }}"
promql_queries:
  - name: "successful-pods"
    expr: "sum(kubelet_running_pod_count{node!~'master.*'}) by (node)"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Successful Pods By Node"
    description: "Number of Running Pods"
    x_label: "Time in minutes"
    y_label: "Number of successful pods"
  - name: "successful-pods-1"
    expr: "sum(kubelet_running_pod_count{node!~'master.*'})"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Successful Pods Total"
    description: "Number of Running Pods"
    x_label: "Time in minutes"
    y_label: "Number of successful pods"
  - name: "failed-pods"
    expr: "sum by (namespace, instance) (kube_pod_status_phase{job='kube-state-metrics', phase=~'Failed'})"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Failed Pods By Namespace"
    description: "Number of Failed Pods"
    x_label: "Time in minutes"
    y_label: "Number of failed pods"
  - name: "failed-pods-1"
    expr: "sum(kube_pod_status_phase{job='kube-state-metrics', phase=~'Failed'})"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Failed Pods Total"
    description: "Number of Failed Pods"
    x_label: "Time in minutes"
    y_label: "Number of failed pods"
  - name: "cpu-utilization"
    expr: "instance:node_cpu_utilisation:rate1m{}"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Node CPU Utilization"
    description: "CPU Utilization by Node"
    x_label: "Time in minutes"
    y_label: "Percentage of the CPU Utilization"
  - name: "memory-utilization"
    expr: "instance:node_memory_utilisation:ratio{}"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Memory Utilization"
    description: "Memory Utilization by Node"
    x_label: "Time in minutes"
    y_label: "Percentage of the Memory Utilization"
  - name: "scaleci-fiotest-cpu"
    expr: "sum(scaleci_fiotest_cpu{build_no='{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}'}) by (exported_instance, block_size)"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "FIO CPU Utilization"
    description: "CPU Utilization by FIO"
    x_label: "Time in minutes"
    y_label: "Percentage of the CPU Utilization"
    prometheus_server_type: "secondary"
    prometheus_server_index: 0
  - name: "scaleci-fiotest-IOPS-min"
    expr: "sum(scaleci_fiotest_iops{build_no='{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}',agg='min'}) by (exported_instance, block_size, exported_job)"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "IOPS Minimum"
    description: "IOPS by FIO (min)"
    x_label: "Time in minutes"
    y_label: "IOPS"
    prometheus_server_type: "secondary"
    prometheus_server_index: 0
  - name: "scaleci-fiotest-IOPS-max"
    expr: "sum(scaleci_fiotest_iops{build_no='{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}',agg='max'}) by (exported_instance, block_size, exported_job)"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "IOPS Maximum"
    description: "IOPS by FIO (max)"
    x_label: "Time in minutes"
    y_label: "IOPS"
    prometheus_server_type: "secondary"
    prometheus_server_index: 0
  - name: "scaleci-fiotest-IOPS-avg"
    expr: "sum(scaleci_fiotest_iops{build_no='{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}',agg='avg'}) by (exported_instance, block_size, exported_job)"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "IOPS Average"
    description: "IOPS by FIO (average)"
    x_label: "Time in minutes"
    y_label: "IOPS"
    prometheus_server_type: "secondary"
    prometheus_server_index: 0
  - name: "scaleci-fiotest-total-io"
    expr: "sum(scaleci_fiotest_total_io{build_no='{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}',agg='avg'}) by (exported_instance)"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Total IO by Node"
    description: "Total IO by Node"
    x_label: "Time in minutes"
    y_label: "Total IOs"
    prometheus_server_type: "secondary"
    prometheus_server_index: 0
  - name: "scaleci-fiotest-bandwidth-read"
    expr: "avg(scaleci_fiotest_bandwidth{build_no='{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}',agg='avg', type='read'}) by (block_size) / 1024 / 1024"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Bandwidth by Job (Read MB/s)"
    description: "Read Performance"
    x_label: "Time in minutes"
    y_label: "Size in MB"
    prometheus_server_type: "secondary"
    prometheus_server_index: 0
  - name: "scaleci-fiotest-bandwidth-write"
    expr: "avg(scaleci_fiotest_bandwidth{build_no='{{ lookup('env', 'BUILD_NUMBER')|default(1, true)|int }}',agg='avg', type='write'}) by (block_size) / 1024 / 1024"
    interval: "30s"
    step: "60"
    print: "yes"
    title: "Bandwidth by Job (Write MB/s)"
    description: "Write Performance"
    x_label: "Time in minutes"
    y_label: "Size in MB"
    prometheus_server_type: "secondary"
    prometheus_server_index: 0
enable_prometheus_queries: "{{ lookup('env', 'ENABLE_PROMETHEUS_QUERIES')|default(true, true)|bool }}"

# Use when it is known that prometheus user workload is enabled. Else fall back to default behavior.
prometheus_user_workload_enabled: "{{ lookup('env', 'PROMETHEUS_USER_WORKLOAD_ENABLED')|default(true, true)|bool }}"