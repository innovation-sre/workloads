---
###############################################################################
# Ansible SSH variables.
###############################################################################
ansible_public_key_file: "{{ lookup('env', 'PUBLIC_KEY')|default('~/.ssh/id_rsa.pub', true) }}"
ansible_private_key_file: "{{ lookup('env', 'PRIVATE_KEY')|default('~/.ssh/id_rsa', true) }}"

orchestration_user: "{{ lookup('env', 'ORCHESTRATION_USER')|default('root', true) }}"
###############################################################################
# PodVertical workload variables.
###############################################################################
# snafu es variables
snafu_es_host: "{{ lookup('env', 'ES_HOST')|default('', true) }}"
snafu_es_port: "{{ lookup('env', 'ES_PORT')|default('', true) }}"
snafu_es_index_prefix: "{{ lookup('env', 'ES_INDEX_PREFIX')|default('snafu', true) }}"
snafu_cluster_name: "{{ lookup('env', 'SNAFU_CLUSTER_NAME')|default('', true) }}"
snafu_user: "{{ lookup('env', 'SNAFU_USER')|default('scale-ci', true) }}"

workload_image: "{{ lookup('env', 'WORKLOAD_IMAGE')|default('quay.io/openshift-scale/scale-ci-workload:master', true) }}"

workload_job_node_selector: "{{ lookup('env', 'WORKLOAD_JOB_NODE_SELECTOR')|default(false, true)|bool }}"
workload_job_taint: "{{ lookup('env', 'WORKLOAD_JOB_TAINT')|default(false, true)|bool }}"
workload_job_privileged: "{{ lookup('env', 'WORKLOAD_JOB_PRIVILEGED')|default(false, true)|bool }}"

kubeconfig_file: "{{ lookup('env', 'KUBECONFIG_FILE')|default('~/.kube/config', true) }}"

# pbench variables
pbench_instrumentation: "{{ lookup('env', 'PBENCH_INSTRUMENTATION')|default(false, true)|bool|lower }}"
enable_pbench_agents: "{{ lookup('env', 'ENABLE_PBENCH_AGENTS')|default(false, true)|bool }}"
enable_pbench_copy: "{{ lookup('env', 'ENABLE_PBENCH_COPY')|default(false, true)|bool|lower }}"
pbench_ssh_private_key_file: "{{ lookup('env', 'PBENCH_SSH_PRIVATE_KEY_FILE')|default('~/.ssh/id_rsa', true) }}"
pbench_ssh_public_key_file: "{{ lookup('env', 'PBENCH_SSH_PUBLIC_KEY_FILE')|default('~/.ssh/id_rsa.pub', true) }}"
pbench_server: "{{ lookup('env', 'PBENCH_SERVER')|default('', true) }}"

# Azure auth vars to set for ocp on azure
azure_auth: "{{ lookup('env', 'AZURE_AUTH')|default(false, true)|bool|lower }}"
azure_auth_file: "{{ lookup('env', 'AZURE_AUTH_FILE')|default('', true) }}"

# Other variables for workload tests
scale_ci_results_token: "{{ lookup('env', 'SCALE_CI_RESULTS_TOKEN')|default('', true) }}"
job_completion_poll_attempts: "{{ lookup('env', 'JOB_COMPLETION_POLL_ATTEMPTS')|default(360, true)|int }}"

# PodVertical workload specific parameters:
podvertical_test_prefix: "{{ lookup('env', 'PODVERTICAL_TEST_PREFIX')|default('podvertical', true) }}"
podvertical_cleanup: "{{ lookup('env', 'PODVERTICAL_CLEANUP')|default(true, true)|bool|lower }}"
podvertical_basename: "{{ lookup('env', 'PODVERTICAL_BASENAME')|default('podvertical', true) }}"
podvertical_maxpods: "{{ lookup('env', 'PODVERTICAL_MAXPODS')|default(1000, true)|int }}"
podvertical_pod_image: "{{ lookup('env', 'PODVERTICAL_POD_IMAGE')|default('gcr.io/google_containers/pause-amd64:3.0', true) }}"
podvertical_stepsize: "{{ lookup('env', 'PODVERTICAL_STEPSIZE')|default(500, true)|int }}"
podvertical_pause: "{{ lookup('env', 'PODVERTICAL_PAUSE')|default(30, true)|int }}"
podvertical_ts_timeout: "{{ lookup('env', 'PODVERTICAL_TS_TIMEOUT')|default(600, true)|int }}"

#Prometheus vars
workload_name: "podvertical"
job_name: "{{ lookup('env', 'JOB_NAME')|lower()|default('', true) }}"
job_url: "{{ lookup('env', 'JOB_URL')|default('', true) }}"
build_number: "{{ lookup('env', 'BUILD_NUMBER')|default('', true) }}"
workspace: "{{ lookup('env', 'WORKSPACE')|default('', true) }}"
promql_queries:
  - name: "etcd-object-count"
    expr: "sum(rate(etcd_object_counts{}[1m]))"
    interval: "30s"
    step: "60"
    print: "yes"
  - name: "qps-master-node"
    expr: "sum by (instance) (rate(apiserver_request_total{}[1m]))"
    interval: "30s"
    step: "60"
    print: "yes"
  - name: "success-rate"
    expr: "sum by (instance) (rate(apiserver_request_total{code=~'[25]..'}[1m]))"
    interval: "30s"
    step: "60"
    print: "yes"
  - name: "error-rate"
    expr: "sum by (instance) (rate(apiserver_request_total{code=~'[45]..'}[1m]))"
    interval: "30s"
    step: "60"
    print: "yes"
enable_prometheus_queries: "{{ lookup('env', 'ENABLE_PROMETHEUS_QUERIES')|default(true, true)|bool }}"

# Pass/fail criteria
expected_podvertical_duration: "{{ lookup('env', 'EXPECTED_PODVERTICAL_DURATION')|default(600, true)|int }}"
workload_nodeselector: "{{ lookup('env', 'WORKLOAD_NODESELECTOR')|default('', true) }}"
workload_script_config: "scale-ci-podvertical-script"